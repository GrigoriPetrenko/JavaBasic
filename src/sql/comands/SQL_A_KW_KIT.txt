6. Sortowanie:

SELECT
    first_name AS imie,
    last_name AS nazwisko,
    salary AS pensja
FROM
    hr.employees
ORDER BY
    nazwisko DESC,
    imie ASC;
///////////////////////////////////////////////
7. Działania arytmetyczne na kolumnach *,  /,  +,  -

SELECT
    employee_id AS pracownik,
    salary AS pensja_przed,
    salary+salary*0.5 AS pensja_po
FROM
    hr.employees;
///////////////////////////////////////////////
2.1.1. Słowa kluczowe wykorzystywane przy definiowaniu warunków
SELECT
*
FROM
hr.employees
WHERE
salary
BETWEEN
2600
AND
5000
--AND
--job_id <> 'FI_ACCOUNT'
--job_id = 'FI_ACCOUNT'
--job_id like 'FI_%'
--(job_id = 'PU_CLERK' OR job_id = 'ST_CLERK')
--job_id in ('PU_CLERK', 'ST_CLERK')
///////////////////////////////////////////////
Funkcja NVL zmienia puste wartości (NULL) na zdefiniowane
 wartości zastępcze. Wartość zastępcza musi być tego samego
  typu co sprawdzana kolumna.
  SELECT
  city, nvl(state_province, 'brak')
  FROM
  hr.locations;
///////////////////////////////////////////////
SUBSTR (text, m [,n]) - funkcja wybiera z ciągu text n znaków począwszy
 od pozycji m. Jeśli n nie jest podane, to wybiera wszystkie znaki od
 pozycji m do końca.
 SELECT
 first_name, substr(last_name, 1,5)
 FROM
 hr.employees;
///////////////////////////////////////////////
INSTR(text_1, text_2 [,m, n]) – szuka n-tego wystąpienia text_2 w
text_1 rozpoczynając od pozycji m. Przykład pokazuje wyszukanie pozycji
pierwszej litery „e” w last_name - szukając od pierwszego znaku:
SELECT
last_name, instr(last_name,'a',1,1)
FROM
hr.employees;